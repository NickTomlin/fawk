#!/usr/bin/env node
'use strict'

let createReadStream = require('fs').createReadStream
let EOL = require('os').EOL
let argv = process.argv.slice(2)
let nawk = require('../index')

function usage () {
  console.log('nawk <expression> <commands> <options>')
  console.log('nawk file.txt \'$1\' --append ,')
}

// dang MB is a smart fellow http://stackoverflow.com/a/15485424/1048479
if (process.stdin.isTTY) {
  // we expect a filename to be the first argument
  let filename = argv.shift() || ''
  main(createReadStream(filename))
} else {
  main(process.stdin)
}

function main (inputStream) {
  if (argv.length === 0) {
    usage()
    process.exit(1)
  } else if (argv[0].indexOf('--') === 0) {
    usage()
    process.exit(1)
  }

  inputStream.on('error', (e) => {
    if (e.code === 'ENOENT') {
      console.warn(`Specified input file: ${e.path} does not exist`)
    } else {
      throw e
    }
  })

  inputStream.on('data', (buffer) => {
    let lines = buffer.toString().split(EOL).filter((x) => x !== '')

    lines.forEach((line, index, arr) => {
      let processed = nawk(line, argv)
      process.stdout.write(`${processed}${EOL}`)
    })
  })
}
